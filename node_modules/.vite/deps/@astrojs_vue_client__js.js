import {
  createApp,
  createSSRApp,
  defineComponent,
  h
} from "./chunk-3NMN3MUW.js";
import "./chunk-DFKQJ226.js";

// node_modules/@astrojs/vue/client.js
import { setup } from "virtual:@astrojs/vue/app";

// node_modules/@astrojs/vue/static-html.js
var StaticHtml = defineComponent({
  props: {
    value: String,
    name: String
  },
  setup({ name, value }) {
    if (!value)
      return () => null;
    return () => h("astro-slot", { name, innerHTML: value });
  }
});
var static_html_default = StaticHtml;

// node_modules/@astrojs/vue/client.js
var client_default = (element) => async (Component, props, slotted, { client }) => {
  delete props["class"];
  if (!element.hasAttribute("ssr"))
    return;
  const name = Component.name ? `${Component.name} Host` : void 0;
  const slots = {};
  for (const [key, value] of Object.entries(slotted)) {
    slots[key] = () => h(static_html_default, { value, name: key === "default" ? void 0 : key });
  }
  if (client === "only") {
    const app = createApp({ name, render: () => h(Component, props, slots) });
    await setup(app);
    app.mount(element, false);
  } else {
    const app = createSSRApp({ name, render: () => h(Component, props, slots) });
    await setup(app);
    app.mount(element, true);
  }
};
export {
  client_default as default
};
//# sourceMappingURL=@astrojs_vue_client__js.js.map
